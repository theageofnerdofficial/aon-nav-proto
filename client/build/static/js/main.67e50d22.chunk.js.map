{"version":3,"sources":["Components/Loader/Loader.js","Components/Loader/LoaderCentered.js","Components/FontIcon/FontIcon.js","Components/Utils/utils/utils.js","Components/Post/PostElemBySource/PostElem.js","constants.js","config/settings.js","Components/Post/Post.js","Components/Post/Posts.js","Components/SectionTitle/SectionTitle.js","Components/SectionTitle/SectionTitlePostsTitle.js","Components/Utils/utils/formatTweet.js","Components/Utils/utils/formatReddit.js","Home.js","MyNerd.js","TVFilm.js","Gaming.js","RetroGames.js","ModernGames.js","BoardGames.js","Comics.js","Contact.js","Components/Footer/Footer.js","Components/Header/Hero/HeroLogo.js","Components/Header/Hero/HeroLinks/HeroLinksGeneral.js","Components/Header/Hero/HeroLinks/HeroLinksSocial.js","Components/Header/Hero/HeroBg.js","Components/Header/Hero/Hero.js","Components/Header/Navbar/Navbar.js","Components/Header/Header.js","Components/KonamiCode/KonamiCode.js","Components/LoginBtn/LoginBtn.js","Components/LoginForm/LoginForm.js","Components/Modal/Modal.js","themeProvider/global.js","Main.js","themeProvider/theme.js","actions.js","reducers.js","index.js"],"names":["Loader","alt","src","style","width","LoaderCentered","className","opacity","FontIcon","icon","faIcon","faArchway","faCog","faFacebook","faInstagramSquare","faMoon","faRedditAlien","faSun","faTwitter","utils","arr","randomize","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","str","makeTitleCase","replace","txt","charAt","toUpperCase","substr","toLowerCase","urlify","text","urlRegex","test","url","time","convertTo","removeLinkSuffix","link","urlBeginning","charactersToRemove","substring","indexOf","postElem","user","get","o","settings","thumbnail","source","userData","ui","defaultPostThumbs","reddit","gaming","twitter","borderRadius","network","headers","general","sectionTab","featured","mynerd","tvfilm","retro","modern","board","comics","Post","getEmbeddedImages","props","entities_media","map","m","media_url","maxHeight","overflow","this","screen_name","ReactHtmlParser","embeddedVideos","variants","extended_entities_media","forEach","video_info","variant","push","sources","filter","v","content_type","controls","s","type","getEmbeddedVideos","Fragment","alignSelf","getEmbeddedMedia","Component","Posts","allData","console","log","d","index","height","key","offset","placeholder","id","created_at","description","preview_img_arr","SectionTitle","Title","styled","div","tabColour","fontWeight","textTransform","title","SectionTitlePostsTitle","formatTweet","formatTweetData","tweet","retweeted_status","full_text","lang","retweet_count","favorite_count","entities","media","extended_entities","status","format","formatReddit","formatRedditData","data","Date","created_utc","stickied","subreddit","preview","images","selftext","media_embed","upvote_ratio","hasDataCombined","formattedReddit","formattedTweets","Home","combine","dataReducer","redditDataFormatted","tweetDataFormatted","hasRedditFormatted","hasTweetFormatted","dataCombine","setRedditFormatted","formattedRedditData","redditDataRaw","r","dataFormatReddit","setTwitterFormatted","formattedTweetData","tweetDataRaw","statuses","t","dataFormatTweets","request","getRedditRaw","dataRequest","count","endpoint","getTwitterRaw","sectionTitle","MyNerd","TVFilm","Gaming","state","redditData","fetch","then","response","json","setState","RetroGames","ModernGames","BoardGames","Comics","Contact","Footer","getFullYear","HeroLogo","HeroLinksGeneral","onClick","e","toggleLights","lightsOff","HeroLinksSocial","HeroBg","Hero","Navbar","resizeByPageName","page","navItems","Link","to","activeItem","name","setActiveItem","Header","bind","target","KonamiCode","easterEgg","action","timeout","React","LoginBtn","data-toggle","data-target","border","letterSpacing","position","right","top","LoginForm","background","fontSize","href","Modal","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","navbarTopInit","GlobalStyles","createGlobalStyle","theme","body","heroBgCol","navBtnBg","navBtnCol","heroBgImgOpacity","modalBody","navBtnColActive","navBtnBorder","lightTheme","themeDefault","light","bg","primary","hero","bgCol","secondary","accent","darkTheme","dark","Main","dynamicNavbar","handleScroll","navbar","document","getElementById","navbarHasFixed","classList","contains","y","window","pageYOffset","remove","add","cache","getBoundingClientRect","twitterData","addEventListener","passive","marginTop","exact","path","render","component","withRouter","connect","dispatch","q","method","res","payload","catch","error","dataPending","logger","createLogger","rootReducers","combineReducers","newAllData","concat","Object","assign","newState","children","slice","uiReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM"],"mappings":"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","file":"static/js/main.67e50d22.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div>\n      <img alt=\"Loading icon\" src=\"img/spinner.gif\" style={{ width: 40 }} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport Loader from './Loader';\n\nconst LoaderCentered = () => {\n  return (\n    <div\n      className=\"border-0 form-control p-4 text-center\"\n      style={{ opacity: 0.7 }}\n    >\n      <Loader />\n    </div>\n  );\n};\n\nexport default LoaderCentered;\n","// Imports:\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n// Solid SVG icons:\nimport {\n  faArchway,\n  faCog,\n  faMoon,\n  faSun,\n} from '@fortawesome/free-solid-svg-icons';\n\n// Brand SVG icons:\nimport {\n  faFacebook,\n  faInstagramSquare,\n  faRedditAlien,\n  faTwitter,\n} from '@fortawesome/free-brands-svg-icons';\n\nconst FontIcon = (icon) => {\n  let faIcon;\n  switch (icon) {\n    case 'faArchway':\n      faIcon = faArchway;\n      break;\n    case 'faCog':\n      faIcon = faCog;\n      break;\n    case 'faFacebook':\n      faIcon = faFacebook;\n      break;\n    case 'faInstagramSquare':\n      faIcon = faInstagramSquare;\n      break;\n    case 'faMoon':\n      faIcon = faMoon;\n      break;\n    case 'faRedditAlien':\n      faIcon = faRedditAlien;\n      break;\n    case 'faSun':\n      faIcon = faSun;\n      break;\n    case 'faTwitter':\n      faIcon = faTwitter;\n      break;\n    default:\n      faIcon = faArchway;\n  }\n  return <FontAwesomeIcon icon={faIcon} />;\n};\n\nexport default FontIcon;\n","const utils = {\n  arr: {\n    randomize(arr) {\n      let currentIndex = arr.length,\n        temporaryValue,\n        randomIndex;\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = arr[currentIndex];\n        arr[currentIndex] = arr[randomIndex];\n        arr[randomIndex] = temporaryValue;\n      }\n      return arr;\n    },\n  },\n  str: {\n    makeTitleCase(str) {\n      return str.replace(\n        /\\w\\S*/g,\n        (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n      );\n    },\n  },\n  urlify(text) {\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n    const hasRegex = urlRegex.test(text);\n    return hasRegex\n      ? text.replace(\n          urlRegex,\n          (url) => `<a target=\"_blank\" href=\"${url}\">${url}</a>`\n        )\n      : text;\n  },\n  time: {\n    convertTo() {\n      //\n    },\n  },\n  removeLinkSuffix(link, urlBeginning = 'https://t.co', charactersToRemove) {\n    if (\n      link.substring(link.length - charactersToRemove).indexOf(urlBeginning) >=\n      0\n    ) {\n      return link.substring(0, link.length - charactersToRemove);\n    }\n    return link;\n  },\n};\n\nexport default utils;\n","import React, { Component } from 'react';\nimport { SOURCE_TWITTER, SOURCE_REDDIT } from '../../../constants';\n//\nconst postElem = {\n  user: {\n    get(o, settings) {\n      //\n    },\n  },\n\n  thumbnail: {\n    get(o, settings) {\n      const { source, userData } = o;\n      let src;\n      switch (source) {\n        case SOURCE_REDDIT:\n          src = settings.ui.defaultPostThumbs.reddit.gaming;\n          break;\n        case SOURCE_TWITTER:\n          src = settings.ui.defaultPostThumbs.twitter.gaming;\n          /*\n          if (userData && userData.profile_image_url) {\n            src = userData.profile_image_url;\n          } else {\n            src = settings.ui.defaultPostThumbs.twitter.gaming;\n          }*/\n          break;\n        default:\n        //\n      }\n\n      return <img src={src} style={{ borderRadius: '100px', width: '40px' }} />;\n    },\n  },\n};\n\nexport default postElem;\n","/* Data request constants:\n *****************************************************/\nexport const DATA_COMBINE = 'DATA_COMBINE';\nexport const DATA_FORMAT_REDDIT = 'DATA_FORMAT_REDDIT';\nexport const DATA_REQUEST_FAILURE = 'DATA_REQUEST_FAILURE';\nexport const DATA_REQUEST_PENDING = 'DATA_REQUEST_PENDING';\nexport const DATA_REQUEST_SUCCESS = 'DATA_REQUEST_SUCCESS';\nexport const DATA_FORMAT_TWEETS = 'DATA_FORMAT_TWEETS';\n\n/* Source constants:\n *****************************************************/\nexport const SOURCE_REDDIT = 'SOURCE_REDDIT';\nexport const SOURCE_TWITTER = 'SOURCE_TWITTER';\n\n/* UI constants:\n *****************************************************/\nexport const UI_TOGGLE_LIGHTS = 'UI_TOGGLE_LIGHTS';\n","const settings = {\n  network: {\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Headers':\n        'Origin, X-Requested-With, Content-Type, Accept, Authorization',\n    },\n  },\n  ui: {\n    defaultPostThumbs: {\n      general: './img/thumbnails/aon-default.svg',\n      reddit: {\n        gaming: './img/thumbnails/gaming-reddit-2.svg',\n      },\n      twitter: {\n        gaming: './img/thumbnails/gaming-twitter-2.svg',\n      },\n    },\n    style: {\n      sectionTab: {\n        featured: '#f44336',\n        mynerd: '#8bc34a',\n        tvfilm: '#009688',\n        gaming: {\n          retro: '#cddc39',\n          modern: '#795548',\n          board: '#673ab7',\n        },\n        comics: '#ffc107',\n      },\n    },\n  },\n};\n\nexport default settings;\n","/* Imports:\n ***************************************************************/\nimport React, { Component } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport FontIcon from '../FontIcon/FontIcon';\nimport utils from '../Utils/utils/utils';\nimport { SOURCE_REDDIT, SOURCE_TWITTER } from '../../constants';\nimport postElem from './PostElemBySource/PostElem';\nimport settings from '../../config/settings';\n\nclass Post extends Component {\n  render() {\n    /* :\n     ***************************************************************/\n    const getEmbeddedVideos = () => {\n      let variants = [];\n      if (this.props.extended_entities_media !== null) {\n        this.props.extended_entities_media.forEach((m) => {\n          if (m.video_info) {\n            m.video_info.variants.forEach((variant) => variants.push(variant));\n          }\n        });\n      }\n      //\n      if (variants.length > 0) {\n        const sources = variants.filter((v) => {\n          if (v.content_type === 'video/mp4') return v;\n        });\n        return (\n          <video className=\"rounded\" width=\"100%\" controls>\n            {sources.map((s) => (\n              <source type={s.content_type} src={s.url}></source>\n            ))}\n          </video>\n        );\n      } else {\n        return false;\n      }\n    };\n    /* :\n     ***************************************************************/\n    const getEmbeddedImages = () => {\n      if (this.props.entities_media) {\n        return this.props.entities_media.map((m) => {\n          if (m.media_url) {\n            return (\n              <div style={{ maxHeight: 200, overflow: 'scroll' }}>\n                <img className=\"rounded\" width=\"100%\" src={m.media_url} />\n              </div>\n            );\n          }\n        });\n      }\n    };\n    /* :\n     ***************************************************************/\n    const getEmbeddedMedia = () => {\n      const embeddedVideos = getEmbeddedVideos();\n      if (embeddedVideos) {\n        return (\n          <React.Fragment>\n            <div className=\"col-6 p-1\" style={{ alignSelf: 'flex-start' }}>\n              {getEmbeddedImages()}\n            </div>\n            <div className=\"col-6 p-1\" style={{ alignSelf: 'flex-start' }}>\n              {embeddedVideos}\n            </div>\n          </React.Fragment>\n        );\n      } else {\n        return (\n          <div className=\"col-12 p-1\" style={{ alignSelf: 'flex-start' }}>\n            {getEmbeddedImages()}\n          </div>\n        );\n      }\n    };\n    const getUsername = () => {\n      if (this.props.source === SOURCE_TWITTER && this.props.userData) {\n        return this.props.userData.screen_name + ' - Twitter (Official)';\n      } else if (this.props.source === SOURCE_REDDIT && this.props.userData) {\n        return this.props.userData;\n      }\n    };\n\n    /* :\n     ***************************************************************/\n    const getIcon = () => {\n      if (this.props.source === SOURCE_TWITTER) {\n        return 'faTwitter';\n      } else if (this.props.source === SOURCE_REDDIT) {\n        return 'faRedditAlien';\n      }\n    };\n    //\n    const { source, userData } = this.props;\n    /* :\n     ***************************************************************/\n    return (\n      <div className=\"col-12 m-0 mb-2 p-0 py-2 post-wrapper rounded row shadow-sm\">\n        <div className=\"col-2 text-center p-0 m-0\">\n          {postElem.thumbnail.get({ source, userData }, settings)}\n          <br />\n        </div>\n        <div className=\"col-10 py-2\">\n          <h6 className=\"font-weight-normal\">\n            {getUsername({ source, userData })}\n          </h6>\n          <h6 className=\"font-weight-light\">\n            {ReactHtmlParser(utils.urlify(this.props.text))}\n          </h6>\n          {/* <small style={{ fontWeight: 300 }} className=\"text-muted\">\n            {this.props.created_at}\n          </small>*/}\n        </div>\n        <div className=\"col-12 m-0 p-2 row\">{getEmbeddedMedia()}</div>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","/* Imports:\n ***************************************************************/\nimport React, { Component } from 'react';\nimport LazyLoad from 'react-lazyload';\nimport LoaderCentered from '../Loader/LoaderCentered';\nimport Post from './Post';\n\nclass Posts extends Component {\n  componentDidMount() {\n    const { allData } = this.props;\n    console.log('GET HERE?');\n    console.log(allData);\n  }\n  render() {\n    const { allData } = this.props;\n\n    const dataHasLength = () => allData && allData.length > 0;\n    {\n      return dataHasLength() ? (\n        allData.map((d, index) => {\n          return (\n            <LazyLoad\n              height={300}\n              key={`ll-post-${index}`}\n              offset={[-100, 100]}\n              placeholder={<LoaderCentered />}\n            >\n              <Post\n                id={d.id}\n                created_at={d.created_at}\n                description={d.description ? d.description : null}\n                entities_media={d.entities_media ? d.entities_media : null}\n                extended_entities_media={\n                  d.extended_entities_media ? d.extended_entities_media : null\n                }\n                preview_img_arr={d.preview_img_arr ? d.preview_img_arr : null}\n                source={d.source}\n                text={d.text}\n                userData={d.user}\n              />\n            </LazyLoad>\n          );\n        })\n      ) : (\n        <LoaderCentered />\n      );\n    }\n  }\n}\n\nexport default Posts;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nclass SectionTitle extends Component {\n  render() {\n    const Title = styled.div`\n      border-bottom: 1px solid #0f0f0f;\n      display: block;\n      font-size: 1.6em;\n      line-height: 1.3;\n      letter-spacing: -0.5px;\n      margin-bottom: 1rem;\n      padding-bottom: 1rem;\n      position: relative;\n      &:before {\n        background: ${this.props.tabColour ? this.props.tabColour : '#ccc'};\n        bottom: 0;\n        content: '';\n        display: block;\n        height: 5px;\n        left: 0;\n        position: absolute;\n        width: 25px;\n      }\n    `;\n    return (\n      <Title>\n        <h2 style={{ fontWeight: 300, textTransform: 'uppercase' }}>\n          {this.props.title}\n        </h2>\n      </Title>\n    );\n  }\n}\n\nexport default SectionTitle;\n","import React, { Component } from 'react';\n\nclass SectionTitlePostsTitle extends Component {\n  render() {\n    return (\n      <h4 className=\"font-weight-light my-3 text-muted\">{this.props.text}</h4>\n    );\n  }\n}\n\nexport default SectionTitlePostsTitle;\n","import { SOURCE_TWITTER } from '../../../constants';\n\nconst formatTweet = {\n  formatTweetData(tweet) {\n    return {\n      id: tweet.id,\n      source: SOURCE_TWITTER,\n      user: tweet.user,\n      text: tweet.retweeted_status\n        ? tweet.retweeted_status.full_text\n        : tweet.full_text,\n      created_at: tweet.created_at,\n      lang: tweet.lang,\n      retweet_count: tweet.retweet_count,\n      favorite_count: tweet.favorite_count,\n      entities_media: tweet.entities ? tweet.entities.media : null,\n      extended_entities_media: tweet.extended_entities\n        ? tweet.extended_entities.media\n        : null,\n    };\n  },\n\n  status: {\n    format: {\n      removeLinkSuffix(status) {\n        if (status.substring(status.length - 23).indexOf('https://t.co') >= 0) {\n          return status.substring(0, status.length - 23);\n        }\n        return status;\n      },\n    },\n    get(o, status) {\n      const s = status.retweeted_status\n        ? status.retweeted_status.full_text\n        : status.full_text;\n      return formatTweet.status.format.removeLinkSuffix(s);\n    },\n  },\n};\n\nexport default formatTweet;\n","import { SOURCE_REDDIT } from '../../../constants';\nimport utils from './utils';\n\nconst formatReddit = {\n  formatRedditData(data) {\n    console.log(data);\n    return {\n      id: data.id,\n      created_at: new Date(data.created_utc * 1000),\n      source: SOURCE_REDDIT,\n      stickied: data.stickied ? true : false,\n      user: `${utils.str.makeTitleCase(data.subreddit)} - Reddit (r/${\n        data.subreddit\n      })`,\n      preview_img_arr: data.preview ? data.preview.images : [],\n      text: data.title,\n      description: data.selftext,\n      lang: null,\n      media_embed: data.media_embed,\n      upvote_ratio: data.upvote_ratio,\n    };\n  },\n};\n\nexport default formatReddit;\n","// Imports:\nimport React, { Component } from 'react';\nimport Posts from './Components/Post/Posts';\nimport SectionTitle from './Components/SectionTitle/SectionTitle';\nimport SectionTitlePostsTitle from './Components/SectionTitle/SectionTitlePostsTitle';\nimport formatTweet from './Components/Utils/utils/formatTweet';\nimport formatReddit from './Components/Utils/utils/formatReddit';\nimport settings from './config/settings';\nimport { SOURCE_REDDIT, SOURCE_TWITTER } from './constants';\n\nlet hasDataCombined = false;\nlet formattedReddit = false;\nlet formattedTweets = false;\n\nclass Home extends Component {\n  componentDidMount() {\n    this.data.request.getRedditRaw();\n    this.data.request.getTwitterRaw();\n  }\n\n  componentDidUpdate() {\n    this.data.format.setRedditFormatted();\n    this.data.format.setTwitterFormatted();\n    this.data.combine();\n  }\n\n  data = {\n    combine: () => {\n      //\n      const {\n        redditDataFormatted,\n        tweetDataFormatted,\n      } = this.props.dataReducer;\n      //\n      const hasRedditFormatted =\n        redditDataFormatted && redditDataFormatted.length > 0;\n      const hasTweetFormatted =\n        tweetDataFormatted && tweetDataFormatted.length > 0;\n      //\n      if (hasRedditFormatted && hasTweetFormatted && !hasDataCombined) {\n        hasDataCombined = true;\n        this.props.dataCombine();\n      }\n    },\n    format: {\n      setRedditFormatted: () => {\n        let formattedRedditData = [];\n        const { redditDataRaw } = this.props.dataReducer;\n        const hasRedditRaw = redditDataRaw && redditDataRaw.length > 0;\n        // If we have Reddit raw data but it's not formatted, format it:\n        if (hasRedditRaw && !formattedReddit) {\n          formattedReddit = true;\n\n          redditDataRaw.forEach((r) => {\n            formattedRedditData.push(formatReddit.formatRedditData(r.data));\n          });\n\n          this.props.dataFormatReddit(formattedRedditData);\n        }\n      },\n      setTwitterFormatted: () => {\n        let formattedTweetData = [];\n        const { tweetDataRaw } = this.props.dataReducer;\n        const hasTweetsRaw = tweetDataRaw && tweetDataRaw.statuses;\n        // If we have Twitter raw data but it's not formatted, format it:\n        if (hasTweetsRaw && !formattedTweets) {\n          formattedTweets = true;\n          tweetDataRaw.statuses.forEach((t) => {\n            formattedTweetData.push(formatTweet.formatTweetData(t));\n          });\n          console.log(formattedTweetData);\n          this.props.dataFormatTweets(formattedTweetData);\n        }\n      },\n    },\n    request: {\n      getRedditRaw: () => {\n        this.props.dataRequest({\n          count: 15,\n          endpoint: 'hot',\n          src: SOURCE_REDDIT,\n          user: 'nintendo',\n        });\n      },\n      getTwitterRaw: () => {\n        this.props.dataRequest({\n          count: 15,\n          endpoint: 'search%2Ftweets',\n          src: SOURCE_TWITTER,\n          user: 'nintendouk',\n          // Refinements/queries if necessary: q: 'zelda since:2019-07-11',\n        });\n      },\n    },\n  };\n  render() {\n    const { allData } = this.props.dataReducer;\n    const sectionTitle = `NintendoUK (${allData ? allData.length : 0})`;\n    return (\n      <div>\n        <SectionTitle\n          tabColour={settings.ui.style.sectionTab.featured}\n          title=\"Featured\"\n        />\n        <SectionTitlePostsTitle text={sectionTitle} />\n        <Posts allData={allData} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport settings from './config/settings';\nimport SectionTitle from './Components/SectionTitle/SectionTitle';\n\nclass MyNerd extends Component {\n  render() {\n    return (\n      <div>\n        <SectionTitle\n          tabColour={settings.ui.style.sectionTab.mynerd}\n          title=\"My Nerd\"\n        />\n        <p style={{ fontWeight: 300 }}>\n          Some day you will need to be logged in to see this page\n        </p>\n        <img\n          style={{ width: '300px' }}\n          src=\"https://media.giphy.com/media/VbnUQpnihPSIgIXuZv/giphy.gif\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default MyNerd;\n","import React, { Component } from 'react';\nimport SectionTitle from './Components/SectionTitle/SectionTitle';\nimport settings from './config/settings';\n\nclass TVFilm extends Component {\n  render() {\n    return (\n      <div>\n        <SectionTitle\n          tabColour={settings.ui.style.sectionTab.tvfilm}\n          title=\"TV/Film\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default TVFilm;\n","import React, { Component } from 'react';\nimport SectionTitle from './Components/SectionTitle/SectionTitle';\nimport settings from './config/settings';\n\nclass Gaming extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redditData: [],\n    };\n  }\n  componentDidMount() {\n    // Server fetch test:\n    fetch('/api/getreddit')\n      .then((response) => response.json())\n      .then((data) => {\n        //console.log(data);\n        this.setState({ redditData: data });\n      });\n  }\n  render() {\n    return (\n      <div>\n        <SectionTitle\n          tabColour={settings.ui.style.sectionTab.gaming.modern}\n          title=\"Gaming\"\n        />\n        {this.state.redditData[0]}\n      </div>\n    );\n  }\n}\n\nexport default Gaming;\n","import React, { Component } from 'react';\nimport SectionTitle from './Components/SectionTitle/SectionTitle';\nimport settings from './config/settings';\n\nclass RetroGames extends Component {\n  render() {\n    return (\n      <div>\n        <SectionTitle\n          tabColour={settings.ui.style.sectionTab.gaming.retro}\n          title=\"Retro Gaming\"\n        />\n        <p>Rise from yaw gwaveee</p>\n      </div>\n    );\n  }\n}\n\nexport default RetroGames;\n","import React, { Component } from 'react';\nimport SectionTitle from './Components/SectionTitle/SectionTitle';\nimport settings from './config/settings';\n\nclass ModernGames extends Component {\n  render() {\n    return (\n      <div>\n        <SectionTitle\n          tabColour={settings.ui.style.sectionTab.gaming.modern}\n          title=\"Modern Gaming\"\n        />\n        <p>Breath of the Wild 2 will be quite the barn burner!</p>\n      </div>\n    );\n  }\n}\n\nexport default ModernGames;\n","import React, { Component } from 'react';\nimport SectionTitle from './Components/SectionTitle/SectionTitle';\nimport settings from './config/settings';\n\nclass BoardGames extends Component {\n  render() {\n    return (\n      <div>\n        <SectionTitle\n          tabColour={settings.ui.style.sectionTab.gaming.board}\n          title=\"Board Gaming\"\n        />\n        <p>Roll the dice, Bertha...</p>\n      </div>\n    );\n  }\n}\n\nexport default BoardGames;\n","import React, { Component } from 'react';\nimport SectionTitle from './Components/SectionTitle/SectionTitle';\nimport settings from './config/settings';\n\nclass Comics extends Component {\n  render() {\n    return (\n      <div>\n        <SectionTitle\n          tabColour={settings.ui.style.sectionTab.comics}\n          title=\"Comics\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Comics;\n","import React, { Component } from 'react';\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div>\n        <h2>GOT QUESTIONS?</h2>\n        <p></p>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <div className=\"container\">\n          <p className=\"text-muted text-right\" style={{ fontWeight: 300 }}>\n            &copy; The Age of Nerd {new Date().getFullYear()}\n          </p>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport '../Header.css';\n\nclass HeroLogo extends Component {\n  render() {\n    return (\n      <div className=\"navbar-logo-wrapper pr-4 text-dark vertical-center\">\n        <img alt=\"AON Logo\" src=\"img/logo.svg\" width=\"165px\" />\n      </div>\n    );\n  }\n}\n\nexport default HeroLogo;\n","import React, { Component } from 'react';\nimport '../../Header.css';\nimport FontIcon from '../../../FontIcon/FontIcon';\n\nclass HeroLinksGeneral extends Component {\n  render() {\n    return (\n      <div className=\"hero-links-wrapper hero-links-general-wrapper\">\n        <button className=\"btn btn-nav-link btn-sm form-control text-left\">\n          {FontIcon('faCog')} Settings\n        </button>\n        <button\n          className=\"btn btn-nav-link btn-sm form-control text-left\"\n          onClick={(e) => this.props.toggleLights()}\n        >\n          {this.props.lightsOff ? FontIcon('faSun') : FontIcon('faMoon')}\n          &nbsp;\n          {this.props.lightsOff ? 'Lighten' : 'Darken'}\n        </button>\n\n        <button className=\"btn btn-nav-link btn-sm form-control text-left\"></button>\n      </div>\n    );\n  }\n}\n\nexport default HeroLinksGeneral;\n","import React, { Component } from 'react';\nimport FontIcon from '../../../FontIcon/FontIcon';\n\nclass HeroLinksSocial extends Component {\n  render() {\n    return (\n      <div className=\"hero-links-wrapper hero-links-social-wrapper\">\n        <button className=\"btn btn-nav-link btn-sm form-control text-left\">\n          {FontIcon('faFacebook')} Facebook\n        </button>\n        <button className=\"btn btn-nav-link btn-sm form-control text-left\">\n          {FontIcon('faTwitter')} Twitter\n        </button>\n        <button className=\"btn btn-nav-link btn-sm form-control text-left\">\n          {FontIcon('faInstagramSquare')} Instagram\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default HeroLinksSocial;\n","import React, { Component } from 'react';\nimport '../Header.css';\n\nclass HeroBg extends Component {\n  render() {\n    return (\n      <div>\n        <img\n          alt=\"\"\n          className=\"hero-bg-img\"\n          src=\"https://static-cdn.jtvnw.net/jtv_user_pictures/ce643359-965f-4002-99da-e8c3acdc2a26-profile_banner-480.jpeg\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default HeroBg;\n","import React, { Component } from 'react';\nimport HeroLogo from './HeroLogo';\nimport HeroLinksGeneral from './HeroLinks/HeroLinksGeneral';\nimport HeroLinksSocial from './HeroLinks/HeroLinksSocial';\nimport HeroBg from './HeroBg';\n\nclass Hero extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          height: 120,\n          width: '100%',\n        }}\n      >\n        <HeroLogo />\n        <HeroLinksGeneral\n          lightsOff={this.props.lightsOff}\n          toggleLights={this.props.toggleLights}\n        />\n        <HeroLinksSocial />\n\n        <HeroBg />\n      </div>\n    );\n  }\n}\n\nexport default Hero;\n","import React, { Component } from 'react';\nimport '../Header.css';\n\nclass Navbar extends Component {\n  render() {\n    /*\n     There was an issue with the \"tv\" nav button taking up as much width\n     as \"gaming\". As such there would be a very padded looking \"tv\" & a very\n     squashed looking \"gaming\" when viewed from a mobile device. The solution:\n     on mobiles, make \"tv\" only 1 column wide & \"gaming\" 3 columns wide:\n    */\n    const resizeByPageName = (page) => {\n      page = page.toLowerCase();\n      if (page === '+') return 'col-1';\n      if (page === 'my nerd') return 'col-3';\n      return 'col-2';\n    };\n    const formatLink = (link) => {\n      var lowerCaseLink = link.toLowerCase();\n      var slashlessLink = lowerCaseLink.replace(/\\//g, '');\n      var spacelessLink = slashlessLink.replace(/\\s/g, '');\n      return spacelessLink;\n    };\n\n    return (\n      <div\n        id=\"navbar-custom\"\n        className=\"bg-custom col-12 m-0 navbar-custom row\"\n      >\n        {this.props.navItems.map((page) => {\n          return (\n            <div\n              className={`bg-light ${resizeByPageName(\n                page\n              )} col-md-2 m-0 p-0 rounded-0`}\n              key={'nav-' + page}\n            >\n              <this.props.Link\n                to={`/${page.toLowerCase() === 'home' ? '' : formatLink(page)}`}\n              >\n                <button\n                  className={`btn btn-light form-control navbar-btn p-0 rounded-0  text-center text-muted text-uppercase ${\n                    this.props.activeItem === page.toLowerCase()\n                      ? 'nav-btn-active'\n                      : ''\n                  }`}\n                  name={page.toLowerCase()}\n                  onClick={(e) => this.props.setActiveItem(e)}\n                >\n                  {page}\n                </button>\n              </this.props.Link>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport Hero from './Hero/Hero';\nimport Navbar from './Navbar/Navbar';\nimport './Header.css';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 'home',\n      navItems: ['Home', 'My Nerd', 'TV/Film', 'Comics', 'Gaming', '+'],\n    };\n    this.setActiveItem = this.setActiveItem.bind(this);\n  }\n  setActiveItem(e) {\n    this.setState({ activeItem: e.target.name });\n  }\n  render() {\n    return (\n      <header>\n        <div className=\"bg-custom-2 header-sub-wrapper\">\n          <Hero\n            lightsOff={this.props.lightsOff}\n            toggleLights={this.props.toggleLights}\n          />\n          <Navbar\n            activeItem={this.state.activeItem}\n            Link={this.props.Link}\n            navItems={this.state.navItems}\n            setActiveItem={this.setActiveItem}\n          />\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport Konami from 'react-konami-code';\nimport '../../Main.css';\n\nclass KonamiCode extends React.Component {\n  easterEgg = () => {\n    // alert('Hey, you typed the Konami Code!');\n  };\n\n  render() {\n    return (\n      <Konami action={this.easterEgg} timeout={5000}>\n        <div className=\"konami-window\">\n          <img\n            alt=\"Konami start screen gif — easter egg\"\n            src=\"https://thumbs.gfycat.com/DeadlyPlushCowrie-small.gif\"\n            style={{ borderRadius: '10px' }}\n          />\n        </div>\n      </Konami>\n    );\n  }\n}\n\nexport default KonamiCode;\n","import React, { Component } from 'react';\n\nclass LoginBtn extends Component {\n  render() {\n    return (\n      <div\n        className=\"btn btn-light btn-link btn-login\"\n        data-toggle=\"modal\"\n        data-target=\"#exampleModalLong\"\n        style={{\n          border: 0,\n          fontWeight: 300,\n          letterSpacing: -1,\n          position: 'absolute',\n          right: 15,\n          top: 185,\n          width: 145,\n        }}\n      >\n        Login/Register\n      </div>\n    );\n  }\n}\n\nexport default LoginBtn;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n  render() {\n    return (\n      <div>\n        <input\n          className=\"form-control\"\n          placeholder=\"Email address\"\n          style={{ fontWeight: 300 }}\n        />\n        <input\n          className=\"form-control\"\n          placeholder=\"Password\"\n          style={{ fontWeight: 300 }}\n          type=\"password\"\n        />\n        <br />\n        <button\n          className=\"btn btn-primary form-control\"\n          style={{ fontWeight: 300 }}\n        >\n          Sign In\n        </button>\n        <br />\n        <br />\n        <div\n          className=\"text-center form-control border-0\"\n          style={{ background: 'none', fontSize: '0.8em', fontWeight: 300 }}\n        >\n          Don't have an account? <a href=\"#\">Sign Up</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport LoginForm from '../LoginForm/LoginForm';\n\nclass Modal extends Component {\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"exampleModalLong\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalLongTitle\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5\n                className=\"modal-title\"\n                id=\"exampleModalLongTitle\"\n                style={{\n                  fontWeight: 300,\n                  textTransform: 'uppercase',\n                  letterSpacing: '-1px',\n                }}\n              >\n                Login\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <LoginForm />\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-modal-close btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  body, html {\n    background: ${({ theme }) => theme.body} !important;\n    color: ${({ theme }) => theme.text};\n  }\n  \n  .bg-custom-2 {\n    background-color: ${({ theme }) => theme.heroBgCol};\n  }\n\n  .btn-modal-close {\n    font-weight: 300;\n  }\n\n  .btn-light {\n    background-color: ${({ theme }) => theme.navBtnBg} !important;\n    color: ${({ theme }) => theme.navBtnCol};\n  }\n\n  .btn-login {\n    border: 0 !important;\n  }\n\n  button.close {\n    text-shadow: 0;\n    color: ${({ theme }) => theme.text};\n  }\n\n  .footer {\n    background-color: ${({ theme }) => theme.body};\n  }\n\n  .hero-bg-img {\n    opacity: ${({ theme }) => theme.heroBgImgOpacity};\n  }\n\n  input {\n    background-color: ${({ theme }) => theme.modalBody} !important;\n    color: ${({ theme }) => theme.text} !important;\n  }\n\n  .modal-content {\n    background-color: ${({ theme }) => theme.modalBody} !important;\n    border: 0;\n  }\n\n  .modal-dialog {\n    color: ${({ theme }) => theme.text};\n  }\n\n  .modal-body, .modal-footer, .modal-header {\n    background-color: ${({ theme }) => theme.modalBody} !important;\n    border-color: ${({ theme }) => theme.modalBody};\n    color: ${({ theme }) => theme.text};\n  }\n  \n  .nav-btn-active {\n    color: ${({ theme }) => theme.navBtnColActive} !important;\n  }\n\n  .navbar-btn {\n    background: ${({ theme }) => theme.navBtnBg};\n    border-color: ${({ theme }) => theme.navBtnBorder};\n  }\n\n  .post-wrapper {\n    background: ${({ theme }) => theme.navBtnBg};\n    color: ${({ theme }) => theme.text};\n  }\n  `;\n","import React, { Component } from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  withRouter,\n  Switch,\n  Link,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Home from './Home';\nimport MyNerd from './MyNerd';\nimport TVFilm from './TVFilm';\nimport Gaming from './Gaming';\nimport RetroGames from './RetroGames';\nimport ModernGames from './ModernGames';\nimport BoardGames from './BoardGames';\nimport Comics from './Comics';\nimport Contact from './Contact';\nimport Footer from './Components/Footer/Footer';\nimport Header from './Components/Header/Header';\nimport KonamiCode from './Components/KonamiCode/KonamiCode';\nimport LoginBtn from './Components/LoginBtn/LoginBtn';\nimport Modal from './Components/Modal/Modal';\nimport { GlobalStyles } from './themeProvider/global';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './themeProvider/theme';\nimport {\n  dataCombine,\n  dataFormatReddit,\n  dataRequest,\n  dataFormatTweets,\n} from './actions';\nimport './Main.css';\n\n// Parameter state comes from index.js provider store state (rootReducers).\nconst mapStateToProps = (state) => {\n  return {\n    dataReducer: state.dataReducer,\n  };\n};\n\n// Dispatch DOM changes to call an action.\n// Note: mapStateToProps returns object, mapDispatchToProps returns function.\n// Function returns an object then uses connect to change data from reducers.\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dataCombine: () => dispatch(dataCombine()),\n    dataRequest: (o) => dispatch(dataRequest(o)),\n    dataFormatReddit: (o) => dispatch(dataFormatReddit(o)),\n    dataFormatTweets: (o) => dispatch(dataFormatTweets(o)),\n  };\n};\n\nlet navbarTopInit;\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lightsOff: false,\n      twitterData: [],\n    };\n    this.toggleLights = this.toggleLights.bind(this);\n  }\n\n  toggleLights() {\n    this.setState({ lightsOff: !this.state.lightsOff });\n  }\n  /* Dynamic navbar: fix the navbar top to the top when user scrolls\n     but \"re-dock\" it when they scroll back up & the hero reappears:\n   *****************************************************************/\n  dynamicNavbar = {\n    handleScroll() {\n      const navbar = document.getElementById('navbar-custom');\n      const navbarHasFixed = navbar.classList.contains('fixed-top');\n      const y = window.pageYOffset;\n      if (y <= navbarTopInit && navbarHasFixed) {\n        navbar.classList.remove('fixed-top');\n      } else if (y > navbarTopInit && !navbarHasFixed) {\n        navbar.classList.add('fixed-top');\n      }\n    },\n    // Cache the initial position of navbar:\n    cache: {\n      top() {\n        const navbar = document.getElementById('navbar-custom');\n        if (!navbarTopInit) {\n          navbarTopInit =\n            navbar.getBoundingClientRect().top + window.pageYOffset;\n        }\n      },\n    },\n  };\n\n  componentDidMount() {\n    this.dynamicNavbar.cache.top();\n    window.addEventListener('scroll', this.dynamicNavbar.handleScroll, {\n      passive: true,\n    });\n  }\n\n  render() {\n    const {\n      dataCombine,\n      dataFormatReddit,\n      dataReducer,\n      dataRequest,\n      dataFormatTweets,\n    } = this.props;\n    return (\n      <Router>\n        <Switch>\n          <ThemeProvider theme={this.state.lightsOff ? darkTheme : lightTheme}>\n            <GlobalStyles />\n            <div>\n              <Header\n                lightsOff={this.state.lightsOff}\n                Link={Link}\n                toggleLights={this.toggleLights}\n              />\n              <KonamiCode />\n              <Modal />\n              <LoginBtn />\n              <main\n                className=\"flex-shrink-0\"\n                role=\"main\"\n                style={{ marginTop: 100 }}\n              >\n                <div className=\"container\">\n                  <div className=\"content\">\n                    <Route\n                      exact\n                      path=\"/\"\n                      render={(props) => (\n                        <Home\n                          dataCombine={dataCombine}\n                          dataFormatReddit={dataFormatReddit}\n                          dataReducer={dataReducer}\n                          dataRequest={dataRequest}\n                          dataFormatTweets={dataFormatTweets}\n                          {...props}\n                        />\n                      )}\n                    />\n                    <Route path=\"/mynerd\" component={withRouter(MyNerd)} />\n                    <Route path=\"/tvfilm\" component={withRouter(TVFilm)} />\n                    <Route path=\"/gaming\" component={Gaming} />\n                    <Route path=\"/retrogaming\" component={RetroGames} />\n                    <Route path=\"/moderngaming\" component={ModernGames} />\n                    <Route path=\"/boardgaming\" component={BoardGames} />\n                    <Route path=\"/comics\" component={Comics} />\n                    <Route path=\"/contact\" component={Contact} />\n                  </div>\n                </div>\n              </main>\n              <Footer />\n            </div>\n          </ThemeProvider>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import themeDefault from './theme_default';\n\nexport const lightTheme = {\n  body: themeDefault.light.bg.primary,\n  heroBgImgOpacity: themeDefault.light.hero.opacity,\n  heroBgCol: themeDefault.light.hero.bgCol,\n  modalBody: themeDefault.light.bg.primary,\n  navBtnBg: themeDefault.light.bg.secondary,\n  navBtnBorder: themeDefault.light.bg.accent,\n  text: themeDefault.light.text.primary,\n};\n\nexport const darkTheme = {\n  body: themeDefault.dark.bg.primary,\n  heroBgCol: themeDefault.dark.hero.bgCol,\n  heroBgImgOpacity: themeDefault.dark.hero.opacity,\n  modalBody: themeDefault.dark.bg.primary,\n  navBtnBg: themeDefault.dark.bg.secondary,\n  navBtnBorder: themeDefault.dark.bg.accent,\n  navBtnColActive: themeDefault.dark.text.primary,\n  text: themeDefault.dark.text.primary,\n};\n","/* Imports:\n ******************************************************/\nimport {\n  DATA_COMBINE,\n  DATA_REQUEST_FAILURE,\n  DATA_REQUEST_PENDING,\n  DATA_REQUEST_SUCCESS,\n  DATA_FORMAT_REDDIT,\n  DATA_FORMAT_TWEETS,\n  SOURCE_REDDIT,\n  SOURCE_TWITTER,\n  UI_TOGGLE_LIGHTS,\n} from './constants';\n\n/* Data actions:\n ******************************************************/\n//\nexport const dataCombine = () => ({\n  type: DATA_COMBINE,\n});\n\n//\nexport const dataFormatReddit = (o) => ({\n  type: DATA_FORMAT_REDDIT,\n  payload: o,\n});\n\n//\nexport const dataFormatTweets = (o) => ({\n  type: DATA_FORMAT_TWEETS,\n  payload: o,\n});\n\n//\nexport const dataRequest = (o) => (dispatch) => {\n  dispatch({ type: DATA_REQUEST_PENDING });\n  const url = () => {\n    if (o.src === SOURCE_TWITTER) {\n      return `/api/request_data_twitter/${o.endpoint}/${o.user}/${o.q}/${o.count}`;\n    } else if (o.src === SOURCE_REDDIT) {\n      return `https://www.reddit.com/r/${o.user}/${o.endpoint}.json`;\n    }\n  };\n  fetch(url(), {\n    method: 'GET',\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      dispatch({\n        count: o.count,\n        payload: data,\n        source: o.src,\n        type: DATA_REQUEST_SUCCESS,\n      });\n    })\n    .catch((error) => dispatch({ type: DATA_REQUEST_FAILURE, payload: error }));\n};\n\n/* UI actions:\n ******************************************************/\n//\nexport const uiToggleLights = (o) => ({\n  type: UI_TOGGLE_LIGHTS,\n  payload: o,\n});\n","/* Imports:\n *********************************************************/\nimport {\n  DATA_COMBINE,\n  DATA_FORMAT_REDDIT,\n  DATA_REQUEST_FAILURE,\n  DATA_REQUEST_PENDING,\n  DATA_REQUEST_SUCCESS,\n  DATA_FORMAT_TWEETS,\n  SOURCE_REDDIT,\n  SOURCE_TWITTER,\n  UI_TOGGLE_LIGHTS,\n} from './constants';\n\nimport utils from './Components/Utils/utils/utils';\n\n/* Visuals — e.g. lights on/off for dark & light mode:\n *********************************************************/\nconst ui = {\n  lightsOff: false,\n};\n\nexport const uiReducer = (state = ui, action = {}) => {\n  switch (action.type) {\n    case UI_TOGGLE_LIGHTS:\n      return Object.assign({}, state, { lightsOff: !this.state.lightsOff });\n    default:\n      return state;\n  }\n};\n\n/* Data — setting the state for info obtained from APIs:\n *********************************************************/\nconst data = {\n  allData: [],\n  dataPending: false,\n  redditDataFormatted: [],\n  redditDataRaw: [],\n  tweetDataFormatted: [],\n  tweetDataRaw: [],\n};\n\nexport const dataReducer = (state = data, action = {}) => {\n  switch (action.type) {\n    case DATA_COMBINE:\n      let newAllData = state.redditDataFormatted.concat(\n        state.tweetDataFormatted\n      );\n      newAllData = utils.arr.randomize(newAllData);\n      return Object.assign({}, state, { allData: newAllData });\n    case DATA_REQUEST_FAILURE:\n      console.log('Data request failure');\n      return Object.assign({}, state, { dataPending: false });\n    case DATA_REQUEST_PENDING:\n      console.log('Data request pending');\n      return Object.assign({}, state, { dataPending: true });\n    case DATA_REQUEST_SUCCESS:\n      console.log('Data request success');\n      let newState = { dataPending: false };\n      if (action.source === SOURCE_TWITTER) {\n        newState.tweetDataRaw = action.payload;\n      } else if (action.source === SOURCE_REDDIT) {\n        newState.redditDataRaw = action.payload.data.children.slice(\n          0,\n          action.count\n        );\n      }\n      return Object.assign({}, state, newState);\n    case DATA_FORMAT_REDDIT:\n      return Object.assign({}, state, {\n        redditDataFormatted: action.payload,\n      });\n    case DATA_FORMAT_TWEETS:\n      return Object.assign({}, state, {\n        tweetDataFormatted: action.payload,\n      });\n    default:\n      return state;\n  }\n};\n","// Imports:\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\n// Reducer imports:\nimport { dataReducer, uiReducer } from './reducers';\n\n// Redux logger provides useful console logs concerning state:\nconst logger = createLogger();\n\n// Root reducers are combined using combineReducers() from Redux library:\nconst rootReducers = combineReducers({\n  dataReducer,\n  uiReducer,\n});\n\n// A store is created from root reducers with Redux logger and Think.\n// Thunk is used to return functions to defer certain actions.\nconst store = createStore(\n  rootReducers,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}